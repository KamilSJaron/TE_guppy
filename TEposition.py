import numpy
import matplotlib.pyplot as plt
import sys
import argparse

parser = argparse.ArgumentParser(description='Plot fraction of masked genome along the chromosome')
parser.add_argument('fasta_input', help='fasta file to plot')
parser.add_argument('-w', '-window_size', type = int, help='window size for plotting', default = 100000)
parser.add_argument('-sw', '-sliding_window', type = int, help='size of frameshift (default window_size, i.e. non-overlapping windows)', default = 0)
# parser.add_argument('ch', help='name of a chromosome/scaffold to plot (defalt all)', default = '')
parser.add_argument('-figure_name', help='name of the output plot (default autogenerated)', default = 'auto')

args = parser.parse_args()

if args.sw == 0:
	args.sw = args.w

if args.figure_name == 'auto':
	args.figure_name = 'figure_w' + str(args.w) + '_sw' + str(args.sw) + '.png'

with open(args.fasta_input, 'r') as fasta_file:
	# this is wrong -> ignores the header
	sex_chromosome = fasta_file.read().replace('\n','')

repeat = []
Ns = []

for start in range(0, len(sex_chromosome) - args.w, sliding_window):
	win = sex_chromosome[start:start + args.w]
	masked = 0
	N = 0
	for c in range(window):
		if win[c] != "N":
			if win[c].isupper():
				masked=masked
			elif win[c].islower():
				masked+=1
		else:
			N+=1
	repeat.append(masked / args.w)
	Ns.append(N / args.w)


plt.figure(figsize=(20,10))
plt.plot(repeat, label = "Repeat",linewidth=3)
plt.plot(Ns, label = "Ns",linewidth=3)
plt.ylabel('Fraction of Repeat')
plt.xlabel('Position of Genome')
plt.title("Repetitive sequence position in male guppy's sex chromosome")
plt.legend()
plt.savefig(args.figure_name) #TEposition10k.png
plt.show


